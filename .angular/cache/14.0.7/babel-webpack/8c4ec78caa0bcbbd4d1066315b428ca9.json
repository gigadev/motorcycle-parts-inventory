{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PartsService } from '../../services/parts.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/parts.service\";\nimport * as i3 from \"@angular/router\";\nexport let PartEditComponent = /*#__PURE__*/(() => {\n  class PartEditComponent {\n    constructor(fb, partsService, route, router) {\n      this.fb = fb;\n      this.partsService = partsService;\n      this.route = route;\n      this.router = router;\n      this.partForm = this.fb.group({\n        make: ['', Validators.required],\n        model: ['', Validators.required],\n        name: ['', Validators.required],\n        year: [null, Validators.required],\n        imageUrl: ['', Validators.required],\n        description: [''],\n        quantity: [0, Validators.required],\n        price: [0, Validators.required]\n      });\n    }\n\n    ngOnInit() {\n      const idParam = this.route.snapshot.paramMap.get('id');\n      this.partId = idParam ? +idParam : 0;\n\n      if (this.partId) {\n        this.loadPart();\n      }\n    }\n\n    loadPart() {\n      this.partsService.getPartById(this.partId).subscribe(part => {\n        this.partForm.patchValue(Object.assign(Object.assign({}, part), {\n          imageUrl: part.imageUrl || part.image_url,\n          year: part.year\n        }));\n      });\n    }\n\n    onSubmit() {\n      if (this.partForm.valid) {\n        const formValue = this.partForm.value;\n        const part = {\n          make: formValue.make,\n          model: formValue.model,\n          name: formValue.name,\n          year: Number(formValue.year),\n          description: formValue.description,\n          image_url: formValue.imageUrl,\n          quantity: Number(formValue.quantity),\n          price: Number(formValue.price)\n        };\n\n        if (this.partId) {\n          part.id = this.partId;\n          this.partsService.updatePart(part).subscribe(() => {\n            this.router.navigate(['/parts']);\n          });\n        } else {\n          this.partsService.addPart(part).subscribe(() => {\n            this.router.navigate(['/parts']);\n          }, err => {\n            var _a;\n\n            alert('Failed to add part: ' + (((_a = err.error) === null || _a === void 0 ? void 0 : _a.error) || err.message));\n          });\n        }\n      }\n    }\n\n    onCancel() {\n      this.router.navigate(['/parts']);\n    }\n\n  }\n\n  PartEditComponent.ɵfac = function PartEditComponent_Factory(t) {\n    return new (t || PartEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PartsService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  PartEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PartEditComponent,\n    selectors: [[\"app-part-edit\"]],\n    decls: 37,\n    vars: 4,\n    consts: [[1, \"bg-white\", \"rounded\", \"shadow\", \"p-4\", \"max-w-xl\", \"mx-auto\"], [1, \"text-xl\", \"font-semibold\", \"mb-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-4\"], [1, \"block\", \"mb-1\", \"font-medium\"], [\"formControlName\", \"make\", 1, \"w-full\", \"border\", \"rounded\", \"p-2\"], [\"formControlName\", \"model\", 1, \"w-full\", \"border\", \"rounded\", \"p-2\"], [\"formControlName\", \"name\", 1, \"w-full\", \"border\", \"rounded\", \"p-2\"], [\"formControlName\", \"imageUrl\", 1, \"w-full\", \"border\", \"rounded\", \"p-2\"], [\"formControlName\", \"description\", 1, \"w-full\", \"border\", \"rounded\", \"p-2\"], [\"type\", \"number\", \"formControlName\", \"quantity\", 1, \"w-full\", \"border\", \"rounded\", \"p-2\"], [\"type\", \"number\", \"step\", \"0.01\", \"formControlName\", \"price\", 1, \"w-full\", \"border\", \"rounded\", \"p-2\"], [1, \"flex\", \"gap-4\"], [\"type\", \"submit\", 1, \"bg-blue-600\", \"text-white\", \"px-4\", \"py-2\", \"rounded\", 3, \"disabled\"], [\"type\", \"button\", 1, \"bg-gray-400\", \"text-white\", \"px-4\", \"py-2\", \"rounded\", 3, \"click\"]],\n    template: function PartEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function PartEditComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n        i0.ɵɵtext(6, \"Make\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 4);\n        i0.ɵɵtext(10, \"Model\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\", 4);\n        i0.ɵɵtext(14, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 3)(17, \"label\", 4);\n        i0.ɵɵtext(18, \"Image URL\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 3)(21, \"label\", 4);\n        i0.ɵɵtext(22, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"textarea\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 3)(25, \"label\", 4);\n        i0.ɵɵtext(26, \"Quantity\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 3)(29, \"label\", 4);\n        i0.ɵɵtext(30, \"Price\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 12)(33, \"button\", 13);\n        i0.ɵɵtext(34);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function PartEditComponent_Template_button_click_35_listener() {\n          return ctx.onCancel();\n        });\n        i0.ɵɵtext(36, \"Cancel\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.partId ? \"Edit Part\" : \"Add Part\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.partForm);\n        i0.ɵɵadvance(30);\n        i0.ɵɵproperty(\"disabled\", !ctx.partForm.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.partId ? \"Update\" : \"Add\");\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n  });\n  return PartEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}